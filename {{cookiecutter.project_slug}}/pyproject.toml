[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.poetry]
authors = ["{{ cookiecutter.author_name }} <{{ cookiecutter.email }}>"]
description = "{{ cookiecutter.description }}"
name = "{{cookiecutter.project_slug}}"
packages = [{ include = "{{cookiecutter.project_slug}}" }]
readme = "README.md"
version = "0.0.0"

[tool.poetry.dependencies]
# Core
python = "~=3.12"
django = { version = ">=5.0,<5.1", extras = ["argon2", "bcrypt"] }
wagtail = ">=5.2,<6.0"
psycopg2 = "^2.9.9"

# Django Extensions
crispy-bootstrap5 = "^2023.10"
django-crispy-forms = "^2.1"
django-environ = "0.11.2"
django-extensions = "3.2.3"
django-mjml = "1.2"
django-redis = "5.4.0"
django-rq = "^2.10.1"
django-widget-tweaks = "1.5.0"

# Wagtail Extensions
wagtail-font-awesome-svg = "^1.0.1"

# Other third-party libraries
bpython = "^0.24"
hiredis = "^2.3.2"
pydantic = "^2.5.3"
whitenoise = "^6.6.0"

# Production
boto3 = "^1.34.7"
# remove the extras you don't need
django-anymail = {extras = ["amazon-ses", "mailersend", "mailgun", "mailjet", "mandrill", "postal", "postmark", "resend", "sendgrid", "sendinblue", "sparkpost"], version = "^10.2"}
django-storages = "^1.14.2"
gunicorn = "^21.2.0"
pymemcache = "4.0.0"
sentry-sdk = "^1.40.3"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = "^24.1.1"
commitizen = "^3.14.1"
django-debug-toolbar = "3.2.2"
djlint = "^1.34.1"
dslr = "^0.4.0"
honcho = "^1.1.0"
invoke = "^2.2.0"
pre-commit = "2.14.0"
ruff = "^0.1.9"
wagtail-factories = "^4.1.0"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest-cov = "^4.1.0"
pytest-django = "^4.7.0"
pytest-dotenv = "^0.5.2"
pytest-factoryboy = "^2.6.0"
pytest-logger = "^0.5.1"
pytest-mock = "^3.12.0"
pytest-sugar = "^0.9.7"
pytest-xdist = "^3.5.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.3"
mkdocs-git-revision-date-localized-plugin = "^1.2.1"
mkdocs-glightbox = "^0.3.5"
mkdocs-material = "^9.5.2"

[tool.black]
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | (.*)/migrations
    | dist
  )/
)
'''
include = '\.pyi?$'
line-length = 120
target-version = ["py38", "py39", "py310", "py311", "py312"]

[tool.ruff]
exclude = [".git", "__pycache__", "node_modules", "public", "venv"]
ignore = ["E203", "E266", "E501"]
line-length = 120
select = ["B", "C", "E", "F", "W", "B9"]
target-version = "py312"

[tool.ruff.isort]
known-first-party = ["{{cookiecutter.project_slug}}"]
section-order = [
  "future",
  "standard-library",
  "third-party",
  "first-party",
  "local-folder",
]

[tool.ruff.pycodestyle]
max-doc-length = 120

[tool.ruff.mccabe]
max-complexity = 10

[tool.coverage.run]
branch = true # Measure branch coverage
omit = [
  "**/migrations/*",
  "*tests*",
  "**/settings/*",
  "*urls.py",
  "*wsgi.py",
]
source = ["{{cookiecutter.project_slug}}"]

[tool.coverage.report]
show_missing = true
skip_covered = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "{{cookiecutter.project_slug}}.settings.test"
addopts = "--ds={{cookiecutter.project_slug}}.settings.test -s -vv --cov-config=pyproject.toml --cov --cov-report json --cov-report term-missing:skip-covered"
env_override_existing_values = 1
log_cli = 1
python_files = ["test_*.py", "*_tests.py"]

[tool.commitizen]
annotated_tag = true
tag_format = "v$major.$minor.$patch"
update_changelog_on_bump = false
version_files = [
    "{{cookiecutter.project_slug}}/__init__.py",
]
version_provider = "poetry"

[tool.djlint]
custom_html = "mjml,mj-\\w+"
profile = "django"
