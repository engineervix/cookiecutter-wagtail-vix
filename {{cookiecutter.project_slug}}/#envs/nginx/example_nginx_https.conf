## http://subdomain.example.org redirects to https://subdomain.example.org
server {
    listen 80;
    listen [::]:80;
    server_name subdomain.example.org;

    # include /etc/nginx/snippets/letsencrypt.conf;

    location / {
        return 301 https://subdomain.example.org$request_uri;
    }
}


## Serves https://subdomain.example.org
server {
    server_name subdomain.example.org;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    # gzip off;
    gzip on;
    gzip_disable "msie6";

    gzip_comp_level 6;
    gzip_min_length 1100;
    gzip_buffers 16 8k;
    gzip_proxied any;
    gzip_types
        # text/plain
        text/css
        text/js
        # text/xml
        text/javascript
        application/javascript
        application/x-javascript;
        # application/json
        # application/xml
        # application/rss+xml
        # image/svg+xml;

    ssl_certificate /etc/letsencrypt/live/subdomain.example.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/subdomain.example.org/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/subdomain.example.org/fullchain.pem;

    ssl_client_certificate /etc/letsencrypt/cloudflare/origin-pull-ca.pem;
    ssl_verify_client on;

    include /etc/nginx/snippets/ssl.conf;
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # recommended by Certbot
    ssl_dhparam /etc/letsencrypt/dhparam.pem;

    ## server_tokens off;                                     # already in /etc/nginx/snippets/ssl.conf

    ## add_header X-Frame-Options DENY;        # already in /etc/nginx/snippets/ssl.conf
    ## add_header X-Content-Type-Options nosniff always;    # already in /etc/nginx/snippets/ssl.conf
    # add_header X-Xss-Protection "1";
    ## add_header X-Xss-Protection "1; mode=block" always;    # already in /etc/nginx/snippets/ssl.conf

    # WARNING! This header must be carefully planned before deploying it on production website
    # as it could easily break stuff and prevent a website to load itâ€™s content!
    # for more info, read https://letsecure.me/secure-web-deployment-with-lets-encrypt-and-nginx/
    # https://content-security-policy.com/
    # https://scotthelme.co.uk/content-security-policy-an-introduction/
    add_header Content-Security-Policy "script-src 'self' https://*.google-analytics.com https://*.googleapis.com https://*.twimg.com https://*.google.com https://www.google.com/recaptcha/api/js/recaptcha_ajax.js https://freegeoip.net https://*.ravenjs.com https://*.sentry.io https://*.disqus.com https://*.amazonaws.com https://*.time.ly https://*.googletagmanager.com https://api.reftagger.com https://reftaggercdn.global.ssl.fastly.net https://*.social9.com https://*.sermonaudio.com https://*.tockify.com https://*.addthis.com https://*.gstatic.com https://*.quotery.com https://*.openweathermap.org https://openweathermap.org https://*.mapbox.com https://*.cloudflare.com https://*.maxcdn.com https://*.bbci.co.uk https://browser-update.org https://*.bbc.co.uk https://*.facebook.com https://*.facebook.net https://*.twitter.com https://*.youtube.com https://cdn.jsdelivr.net 'unsafe-inline' 'unsafe-eval'";
    # add_header Content-Security-Policy "default-src 'self'";
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self' *.google-analytics.com";
    add_header Referrer-Policy strict-origin-when-cross-origin;

    ## ssl_stapling on;           # already in /etc/nginx/snippets/ssl.conf
    ## ssl_stapling_verify on;    # already in /etc/nginx/snippets/ssl.conf

    sendfile              on;
    client_max_body_size 50M;
    keepalive_timeout      0;

    location = /favicon.ico { access_log off; log_not_found off; }

    # location /ico {
    #   alias /path/to/your/subdomain.example.org/{{cookiecutter.project_slug}}/static/ico;
    # }

    location /static {
        etag on;
        expires 7d;
        access_log off;
        add_header Cache-Control "no-cache, public";
        alias /path/to/your/subdomain.example.org/{{cookiecutter.project_slug}}/staticfiles;
    }

    location /files/ {
        etag on;
        expires 7d;
        access_log off;
        add_header Cache-Control "no-cache, public";
        alias /path/to/your/subdomain.example.org/{{cookiecutter.project_slug}}/files/;
    }

    location / {
        include         uwsgi_params;
        uwsgi_pass      unix:/run/uwsgi/subdomain.example.org_production_app.sock;

        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto https;  # <-
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;

    }

    #browser caching of static assets
    # location ~*  \.(jpg|jpeg|svg|png|gif|ico)$ {
    #     etag on;
    #     expires 7d;
    #     access_log off;
    #     add_header Cache-Control "no-cache, public";
    # }

    #browser caching of css and js
    # location ~*  \.(css|js|gz)$ {
    #     etag on;
    #     expires 2d;
    #     access_log off;
    #     add_header Cache-Control "no-cache, public";
    # }

    # add one directive for each http status code
    error_page 400 /ErrorPages/custom_400.html;
    error_page 401 /ErrorPages/custom_401.html;
    error_page 403 /ErrorPages/custom_403.html;
    error_page 404 /ErrorPages/custom_404.html;
    error_page 500 /ErrorPages/custom_500.html;
    error_page 501 /ErrorPages/custom_501.html;
    error_page 502 /ErrorPages/custom_502.html;
    error_page 503 /ErrorPages/custom_503.html;
    error_page 504 /ErrorPages/custom_504.html;

    # redirect the virtual ErrorPages path the real path
    location /ErrorPages/ {
        alias /path/to/your/subdomain.example.org/{{cookiecutter.project_slug}}/templates/nginx/;
        internal;
    }

    access_log /path/to/your/subdomain.example.org/.logs/subdomain.example.org_production_access_log;
    error_log /path/to/your/subdomain.example.org/.logs/subdomain.example.org_production_error_log;
}
